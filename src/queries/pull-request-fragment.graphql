fragment PullRequestFields on PullRequest {
  id
  additions
  deletions
  changedFiles
  title
  updatedAt
  publishedAt
  baseRefOid
  headRefOid
  headRefName
  url
  author {
    ... on User {
      id
      login
    }
  }
  repository {
    nameWithOwner
  }
  files(first: 100) {
    nodes {
      additions
      deletions
      path
    }
  }
  reviews(first: 100) {
    edges {
      node {
        id
        state
        submittedAt
        author {
          login
        }
      }
    }
    totalCount
  }
  state
  comments(first: 1, orderBy: { field: UPDATED_AT, direction: ASC }) {
    edges {
      node {
        author {
          login
        }
        createdAt
        bodyText
      }
    }
    totalCount
  }
  createdAt
  mergedAt
  mergedBy {
    login
  }
  merged
  number
  commits {
    totalCount
  }
  timelineItems(
    itemTypes: [
      PULL_REQUEST_COMMIT
      LABELED_EVENT
      HEAD_REF_FORCE_PUSHED_EVENT
      PULL_REQUEST_REVIEW
      MERGED_EVENT
      CLOSED_EVENT
      REOPENED_EVENT
      ISSUE_COMMENT
    ]
    first: 100
  ) {
    edges {
      node {
        ... on LabeledEvent {
          id
          actor {
            login
            url
          }
          label {
            name
          }
          createdAt
        }
        ... on HeadRefForcePushedEvent {
          id
          createdAt
          actor {
            login
          }
          ref {
            target {
              id
            }
          }
          beforeCommit {
            abbreviatedOid
            url
          }
          afterCommit {
            abbreviatedOid
            url
          }
        }
        ... on PullRequestCommit {
          id
          commit {
            committedDate
            author {
              name
              user {
                login
                url
              }
            }
            url
            deletions
            additions
            messageBody
            messageHeadline
            abbreviatedOid
            pushedDate
          }
        }
        ... on ClosedEvent {
          id
          actor {
            login
            url
          }
          createdAt
        }
        ... on MergedEvent {
          id
          actor {
            login
            url
          }
          createdAt
          mergeRefName
        }
        ... on PullRequestReview {
          id
          author {
            login
            url
          }
          state
          createdAt
          bodyText
          url
        }
        ... on IssueComment {
          id
          author {
            login
            ... on Bot {
              id
              databaseId
            }
          }
          url
          bodyText
          createdAt
        }
        ... on ReopenedEvent {
          id
          createdAt
          actor {
            login
          }
        }
      }
    }
  }
}
